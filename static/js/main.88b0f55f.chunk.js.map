{"version":3,"sources":["redux/actions/items.js","components/Filter/Filter.js","components/AddForm/AddForm.js","components/EditForm/EditForm.js","components/TableItem/TableItem.js","components/Table/Table.js","components/NavBar/NavBar.js","components/App/App.js","redux/reducers/items.js","redux/rootReducer.js","index.js"],"names":["FETCH_ITEMS_BEGIN","FETCH_ITEMS_SUCCESS","SORTED_ITEMS_BY","FILTERED_SELECT","FILTERED_CHECKBOX","SUBMIT_FORM","EDIT_WORKER","SUBMIT_EDIT_FORM","sortedItems","column","type","fetchItems","dispatch","items","itemsFromFile","map","item","isEdit","setTimeout","fetchItemsSuccess","filteredSelect","event","getState","filter","itemsStorage","role","target","value","filteredCheckbox","checked","isArchive","Filter","className","style","display","this","props","onChange","id","htmlFor","Component","connect","state","AddForm","handleSubmit","preventDefault","parseDate","Date","birthday","toLocaleDateString","submit","redirect","handleChangeBirthday","date","setState","name","phone","to","onSubmit","placeholder","handleChangeName","bind","mask","handleChangePhone","handleSelectRole","locale","ru","selected","placeholderText","dateFormat","handleChangeCheckbox","user","submitForm","submitEditForm","history","useHistory","itemID","match","params","find","schema","Yup","shape","min","max","required","form","useFormik","initialValues","validationSchema","values","newItem","push","autoComplete","handleChange","errors","editEvent","editWorker","onClick","handleClick","assistant","translate","science_doctor","leader","Table","filteredColumn","loading","filteredItems","length","el","activeClassName","exact","App","path","component","EditForm","initialState","selectValue","combineReducers","action","error","sortBy","newItems","store","createStore","rootReducer","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88b0f55f.chunk.js","sourcesContent":["import itemsFromFile from '../../assets/employees';\n\nexport const FETCH_ITEMS_BEGIN = 'FETCH_ITEMS_BEGIN';\nexport const FETCH_ITEMS_SUCCESS = 'FETCH_ITEMS_SUCCESS';\nexport const SORTED_ITEMS_BY = 'SORTED_ITEMS_BY';\nexport const FILTERED_SELECT = 'FILTERED_SELECT';\nexport const FILTERED_CHECKBOX = 'FILTERED_CHECKBOX';\n\nexport const SUBMIT_FORM = 'SUBMIT_FORM';\n\nexport const EDIT_WORKER = 'EDIT_WORKER';\n\nexport const SUBMIT_EDIT_FORM = 'SUBMIT_EDIT_FORM';\n\nexport const editWorker = id => ({\n   type: EDIT_WORKER,\n   id\n});\n\nexport const submitForm = user => ({\n    type: SUBMIT_FORM,\n    user\n});\n\nexport const submitEditForm = user => ({\n    type: SUBMIT_EDIT_FORM,\n    user\n});\n\nexport const fetchItemsBegin = () => ({\n    type: FETCH_ITEMS_BEGIN\n});\n\nexport const fetchItemsSuccess = items => ({\n    type: FETCH_ITEMS_SUCCESS,\n    items\n});\n\nexport const sortedItems = column => ({\n    type: SORTED_ITEMS_BY,\n    column\n});\n\nexport const filteredSelectSuccess = value => ({\n    type: FILTERED_SELECT,\n    value\n});\n\nexport const filteredCheckboxSuccess = value => ({\n    type: FILTERED_CHECKBOX,\n    value\n});\n\nexport function fetchItems() {\n    return dispatch => {\n        dispatch(fetchItemsBegin());\n        const items = itemsFromFile.map(item => {\n            return { ...item, isEdit: false }\n        });\n        setTimeout(() => {\n            return dispatch(fetchItemsSuccess(items));\n        }, 1000);\n    }\n}\n\nexport function filteredSelect(event) {\n    return (dispatch, getState) => {\n        const filter = { ...getState().itemsStorage.filter };\n        filter.role = event.target.value;\n        return dispatch(filteredSelectSuccess(filter))\n    }\n}\n\nexport function filteredCheckbox(event) {\n    return (dispatch, getState) => {\n        const filter = { ...getState().itemsStorage.filter };\n        event.target.checked ? filter.isArchive = true : filter.isArchive = false;\n        return dispatch(filteredCheckboxSuccess(filter))\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { filteredSelect, filteredCheckbox } from \"../../redux/actions/items\";\nimport './Filter.scss';\n\nclass Filter extends Component {\n\n    render() {\n        return (\n            <form className=\"filter-form row d-flex align-items-center\">\n              <div className=\"form-group col-md-3\">\n                <select\n                    style={{display: 'block'}}\n                    value={this.props.role}\n                    className=\"form-control\"\n                    onChange={(event) => this.props.dispatch(filteredSelect(event))}\n                >\n                    <option value=\"\">Все должности</option>\n                    <option value=\"leader\">Глава компании</option>\n                    <option value=\"assistant\">Ассистент</option>\n                    <option value=\"science_doctor\">Доктор Наук</option>\n                </select>\n              </div>\n                <div className=\"form-group form-check col-md-3\">\n                  <input\n                    id=\"checkbox\"\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    checked={this.props.isArchive}\n                    onChange={(event) => this.props.dispatch(filteredCheckbox(event))}\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"checkbox\">В архиве</label>\n                </div>\n            </form>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      items: state.items,\n      role: state.itemsStorage.filter.role,\n      isArchive: state.itemsStorage.filter.isArchive\n    }\n};\n\nexport default connect(mapStateToProps)(Filter);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { submitForm } from \"../../redux/actions/items\";\nimport InputMask from 'react-input-mask';\nimport DatePicker from \"react-datepicker\";\nimport ru from 'date-fns/locale/ru';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './AddForm.scss';\n\nclass AddForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      phone: '',\n      role: 'leader',\n      birthday: new Date(),\n      isArchive: false\n    };\n\n    this.redirect = false;\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const parseDate = new Date(this.state.birthday).toLocaleDateString();\n    this.props.submit({\n      ...this.state,\n      birthday: parseDate\n    });\n    this.redirect = true;\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handleChangePhone(event) {\n    this.setState({\n      phone: event.target.value\n    })\n  }\n\n  handleSelectRole(event) {\n    this.setState({\n      role: event.target.value\n    })\n  }\n\n  handleChangeBirthday = (date) => {\n    this.setState({\n      birthday: date\n    })\n  }\n\n  handleChangeCheckbox(event) {\n    this.setState({\n      isArchive: event.target.checked\n    })\n  }\n\n  render() {\n\n\n    if (this.redirect) {\n      return <Redirect to=\"/\"/>\n    }\n\n    return (\n      <form className=\"add-form\" onSubmit={this.handleSubmit}>\n        <h3 className=\"add-form__title\">Добавить лаборанта</h3>\n        <fieldset className=\"form-group\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <input className=\"form-control\" value={this.state.name} placeholder=\"Имя\" type=\"text\" onChange={this.handleChangeName.bind(this)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <InputMask className=\"form-control\" mask=\"+7 (999) 999-9999\" value={this.state.phone} placeholder=\"Телефон\" type=\"text\" onChange={this.handleChangePhone.bind(this)}/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <select  value={this.state.role} className=\"form-control\" onChange={this.handleSelectRole.bind(this)}>\n                <option value=\"leader\">Глава компании</option>\n                <option value=\"assistant\">Ассистент</option>\n                <option value=\"science_doctor\">Доктор наук</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <DatePicker\n                locale={ru}\n                selected={this.state.birthday}\n                onChange={this.handleChangeBirthday}\n                placeholderText=\"Дата рождения\"\n                dateFormat=\"dd.MM.yyyy\"\n                className=\"form-control\"\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"form-group col-md-3\">\n              <input checked={this.state.isArchive}\n                     id=\"checkbox-add\"\n                     onChange={this.handleChangeCheckbox.bind(this)}\n                     type=\"checkbox\" className=\"add-form__checkbox\"/>\n              <label className=\"form-check-label\" htmlFor=\"checkbox-add\">В архиве</label>\n            </div>\n          </div>\n        <button type=\"submit\" className=\"btn btn-dark text-white\">Добавить</button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsStorage.items,\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (user) => dispatch(submitForm(user))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm);\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport InputMask from 'react-input-mask';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport {submitEditForm} from \"../../redux/actions/items\";\nimport './EditForm.scss';\n\nconst EditForm = (props) => {\n\n  const history = useHistory();\n  \n  const itemID = +props.match.params.id;\n  const user = props.items.find(item => item.id === itemID);\n\n  if (!user) {\n    return <Redirect to=\"/\"/>\n  }\n\n  let { name, phone, role, isArchive } = user;\n\n  let schema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Слишком короткое имя')\n      .max(50, 'Слишком длинное имя')\n      .required('Это обязательное поле!'),\n    phone: Yup.string()\n      .required('Это обязательное поле!'),\n  });\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const form = useFormik({\n    initialValues: {\n      name, phone, role, isArchive\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      const newItem = {\n        ...user,\n        ...values,\n        isEdit: false\n      };\n\n      props.submit(newItem);\n      history.push('/')\n    },\n  });\n\n\n\n  return (\n\n      <form className=\"edit-form\" onSubmit={form.handleSubmit}>\n        <h3 className=\"edit-form__title\">Редактировать сотрудника</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <input className=\"form-control\" autoComplete=\"off\" value={form.values.name} name=\"name\" placeholder=\"Имя\" type=\"text\" onChange={form.handleChange}/>\n            {form.errors.name ? <div className=\"alert alert-danger\">{form.errors.name}</div> : null}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <InputMask className=\"form-control\" mask=\"+7 (999) 999-9999\" value={form.values.phone} name=\"phone\" placeholder=\"Телефон\" type=\"text\" onChange={form.handleChange}/>\n            {form.errors.phone ? <div className=\"alert alert-danger\">{form.errors.phone}</div> : null}\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <select value={form.values.role} name=\"role\" className=\"form-control\" onChange={form.handleChange}>\n              <option value=\"leader\">Глава компании</option>\n              <option value=\"assistant\">Ассистент</option>\n              <option value=\"science_doctor\">Доктор наук</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"form-group col-md-3\">\n            <input checked={form.values.isArchive}\n                   id=\"checkbox-edit\"\n                   name=\"isArchive\"\n                   onChange={form.handleChange}\n                   type=\"checkbox\" className=\"add-form__checkbox\"/>\n            <label className=\"form-check-label\" htmlFor=\"checkbox-edit\">В архиве</label>\n          </div>\n        </div>\n        <button type=\"submit\" className=\"btn btn-dark text-white\">Редактировать</button>\n      </form>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsStorage.items\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submit: (user) => dispatch(submitEditForm(user))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditForm);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { editWorker } from \"../../redux/actions/items\";\nimport { connect } from 'react-redux';\nimport './TableItem.scss';\n\nconst TableItem = (props) => {\n\n  const history = useHistory();\n\n  const { id, name, role, birthday, phone  } = props.props;\n\n  let roleObj = {\n    assistant: {\n      id: 'assistant',\n      translate: 'Ассистент'\n    },\n    science_doctor: {\n      id: 'science_doctor',\n      translate: 'Доктор наук'\n    },\n    leader: {\n      id: 'leader',\n      translate: 'Глава компании'\n    }\n  };\n\n  function handleClick(id) {\n    history.push(`/edit/${id}`);\n  }\n\n  return (\n        <tr className=\"table-item\" onClick={() => handleClick(id)}>\n          <td> { id } </td>\n          <td> {name} </td>\n          <td> {birthday} </td>\n          <td> {roleObj[role].translate} </td>\n          <td> {phone} </td>\n        </tr>\n\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    // isArchive: state.itemsStorage.\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editEvent: (id) => dispatch(editWorker(id))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableItem);\n","import React, { Component } from 'react';\nimport {sortedItems} from \"../../redux/actions/items\";\nimport TableItem from \"../TableItem/TableItem\";\nimport './Table.scss';\nimport {connect} from \"react-redux\";\n\nclass Table extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filteredColumn: {\n        name: false,\n        date: false\n      }\n    }\n  }\n\n  render() {\n\n    const { loading, items, filteredItems } = this.props;\n\n    const renderItems = () => {\n      if (filteredItems.length > 0) {\n        return filteredItems.map(el => {\n          return (\n            <TableItem  key={el.id} props={el}/>\n          );\n        })\n      } else {\n        return items.map(el => {\n          return (\n            <TableItem key={el.id} props={el}/>\n          );\n        })\n      }\n\n    };\n\n    if (loading) {\n      return 'Loading...'\n    }\n\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>№</th>\n            <th className=\"table__sort-item\" onClick={() => this.props.dispatch(sortedItems('name'))}>\n              Имя\n            </th>\n            <th className=\"table__sort-item\" onClick={() => this.props.dispatch(sortedItems('birthday'))}>\n              Дата рождения\n            </th>\n            <th>Должность</th>\n            <th>Телефон</th>\n          </tr>\n        </thead>\n        <tbody>\n          { renderItems() }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.itemsStorage.items,\n    filteredItems: state.itemsStorage.filteredItems,\n    loading: state.itemsStorage.loading,\n    filteredColumn: state.itemsStorage.filteredColumn\n  }\n};\n\nexport default connect(mapStateToProps)(Table);\n","import React from 'react';\nimport './NavBar.scss';\nimport { NavLink } from \"react-router-dom\";\n\nexport default props => {\n  return (\n\n    <nav className=\"main-navbar navbar-expand-lg navbar-light\">\n      <NavLink className=\"btn\" activeClassName=\"btn-success\" exact to=\"/\">На главную</NavLink>\n      <NavLink className=\"btn\" activeClassName=\"btn-success\" to=\"/add/\">Добавить лаборанта</NavLink>\n    </nav>\n\n  );\n}\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.scss';\nimport Filter from '../Filter/Filter';\nimport AddForm from '../AddForm/AddForm';\nimport EditForm from \"../EditForm/EditForm\";\nimport Table from '../Table/Table';\nimport NavBar from \"../NavBar/NavBar\";\nimport { connect } from 'react-redux';\nimport {fetchItems} from \"../../redux/actions/items\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(fetchItems());\n    }\n\n    render() {\n        return (\n\n            <div className=\"app__wrapper\">\n                <h1 className=\"app__title\">Лаборанты</h1>\n                <Router>\n                    <NavBar/>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Filter/>\n                            <div className=\"main-table table-responsive\">\n                                <Table/>\n                            </div>\n                        </Route>\n                        <Route path=\"/add\">\n                            <AddForm/>\n                        </Route>\n                        <Route path=\"/edit/:id\" component={EditForm}/>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n       state\n    }\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n    FETCH_ITEMS_BEGIN,\n    FETCH_ITEMS_SUCCESS,\n    SORTED_ITEMS_BY,\n    FILTERED_SELECT, FILTERED_CHECKBOX, SUBMIT_FORM, EDIT_WORKER, SUBMIT_EDIT_FORM,\n} from \"../actions/items\";\nimport { sortBy } from 'lodash'\n\nconst initialState = {\n    items: [],\n    filteredItems: [],\n    loading: false,\n    selectValue: '',\n    filter: {\n        role: '',\n        isArchive: false\n    },\n    filteredColumn: ''\n};\n\nexport default function itemsReducer(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_ITEMS_BEGIN:\n            return {\n                ...state,\n                loading: true,\n                error: null\n            };\n        case FETCH_ITEMS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                items: action.items\n            };\n        case SORTED_ITEMS_BY:\n            return {\n                ...state,\n                loading: false,\n                items: sortBy(state.items, action.column),\n                filteredColumn: action.column\n\n            };\n        case FILTERED_SELECT:\n\n            return {\n                ...state,\n                filter: action.value,\n                filteredItems: state.items.filter(item => {\n                    if (action.value.isArchive) {\n                        return item.role === action.value.role && item.isArchive;\n                    } else {\n                        return item.role === action.value.role;\n                    }\n                })\n            };\n        case FILTERED_CHECKBOX:\n\n            return {\n                ...state,\n                filter: action.value,\n                filteredItems: state.items.filter(item => {\n                    if (action.value.isArchive) {\n                        return (item.role === action.value.role || !action.value.role) && item.isArchive;\n                    } else {\n                        return item.role === action.value.role || !action.value.role === '';\n                    }\n                })\n            };\n        case SUBMIT_FORM:\n            return {\n                ...state,\n                items: [...state.items, {id: state.items.length + 1,...action.user}]\n            };\n        case EDIT_WORKER:\n            const newItems = state.items.map(item => {\n                if (item.id === action.id) {\n                    return {\n                        ...item,\n                        isEdit: !item.isEdit\n                    }\n                }\n                return item;\n            })\n\n            return {\n                ...state,\n                items: newItems\n            };\n\n        case SUBMIT_EDIT_FORM:\n\n            return {\n                ...state,\n                items: state.items.map(item => item.id === action.user.id ? {...action.user} : item),\n                filteredItems: state.filteredItems.map(item => item.id === action.user.id ? {...action.user} : item),\n            }\n\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport itemsStorage from './reducers/items';\n\nexport default combineReducers({\n    itemsStorage\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/rootReducer';\nimport logger from 'redux-logger';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport './assets/index.css';\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk, logger)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}